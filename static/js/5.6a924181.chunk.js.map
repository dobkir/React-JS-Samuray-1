{"version":3,"sources":["components/Login/Login.jsx","components/Login/Login.module.css"],"names":["connect","state","isAuth","auth","authError","login","focusOnError","createDecorator","to","className","classes","container","title","subtitle","onSubmit","values","email","password","rememberMe","validate","errors","decorators","subscription","submitting","initialValues","render","handleSubmit","form","pristine","name","input","meta","fieldArea","active","type","placeholder","error","touched","buttons","disabled","onClick","reset","authErrorField","module","exports"],"mappings":"yLAwGeA,uBALS,SAACC,GAAD,MAAY,CACnCC,OAAQD,EAAME,KAAKD,OACnBE,UAAWH,EAAME,KAAKC,aAGiB,CAAEC,WAA3BL,EA/FD,SAAC,GAAkC,IAAhCE,EAA+B,EAA/BA,OAAQG,EAAuB,EAAvBA,MAAOD,EAAgB,EAAhBA,UAMzBE,EAAeC,cAErB,GAAIL,EACH,OAAO,cAAC,IAAD,CAAUM,GAAI,aAOtB,OACC,sBAAKC,UAAWC,IAAQC,UAAxB,UACC,oBAAIF,UAAWC,IAAQE,MAAvB,+BACA,oBAAIH,UAAWC,IAAQG,SAAvB,2CACA,cAAC,IAAD,CACCC,SATgB,SAACC,GACnBV,EAAMU,EAAOC,MAAOD,EAAOE,SAAUF,EAAOG,aAS1CC,SAAU,SAAAJ,GACT,IAAMK,EAAS,GAOf,OANKL,EAAOC,QACXI,EAAOJ,MAAQ,YAEXD,EAAOE,WACXG,EAAOH,SAAW,YAEZG,GAERC,WAAY,CAACf,GACbgB,aAAc,CACbC,YAAY,GAEbC,cAAe,CACdR,MAAO,GACPC,SAAU,GACVC,YAAY,GAEbO,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMJ,EAAvB,EAAuBA,WAAYK,EAAnC,EAAmCA,SAAnC,EAA6Cb,OAA7C,OACP,uBAAMD,SAAUY,EAAhB,UAEC,cAAC,IAAD,CAAOG,KAAK,QAAZ,SAGE,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACA,sBAAKtB,UAAS,UAAKC,IAAQsB,UAAb,YAA0BD,EAAKE,OAASvB,IAAQuB,OAAS,IAAvE,UACC,0CACA,iDAAWH,GAAX,IAAkBI,KAAK,QAAQC,YAAY,WAC1CJ,EAAKK,OAASL,EAAKM,SAAW,+BAAON,EAAKK,cAI9C,cAAC,IAAD,CAAOP,KAAK,WAAZ,SACE,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACA,sBAAKtB,UAAS,UAAKC,IAAQsB,UAAb,YAA0BD,EAAKE,OAASvB,IAAQuB,OAAS,IAAvE,UACC,6CACA,iDAAWH,GAAX,IAAkBI,KAAK,WAAWC,YAAY,cAC7CJ,EAAKK,OAASL,EAAKM,SAAW,+BAAON,EAAKK,cAI9C,cAAC,IAAD,CAAOP,KAAK,aAAZ,SACE,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACA,sBAAKtB,UAAS,UAAKC,IAAQsB,UAAb,YAA0BD,EAAKE,OAASvB,IAAQuB,OAAS,IAAvE,UACC,gDACA,iDAAWH,GAAX,IAAkBI,KAAK,oBAI1B,sBAAKzB,UAAWC,IAAQ4B,QAAxB,UACC,wBAAQJ,KAAK,SAASK,SAAUhB,EAAhC,oBAGA,wBAAQW,KAAK,SAASM,QAASb,EAAKc,MAAOF,SAAUhB,GAAcK,EAAnE,sBAID,qBAAKnB,UAAWC,IAAQgC,eAAxB,SACEtC,iB,mBCzFRuC,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,SAAW,wBAAwB,UAAY,yBAAyB,QAAU,uBAAuB,eAAiB,8BAA8B,WAAa","file":"static/js/5.6a924181.chunk.js","sourcesContent":["import { Form, Field, FormSpy } from 'react-final-form';\r\nimport classes from './Login.module.css';\r\nimport createDecorator from 'final-form-focus';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\n// import FormStateToRedux from '../common/FormStateToRedux';  // if I will to use Redux State\r\n// import FormStateFromRedux from '../common/FormStateFromRedux';  // if I will to use Redux State\r\n\r\nconst Login = ({ isAuth, login, authError }) => {\r\n\r\n\t// const loginFormState = ({ form }) => (\r\n\t// \t<FormSpy onChange={state => console.log(form, state)} />\r\n\t// );\r\n\r\n\tconst focusOnError = createDecorator()\r\n\r\n\tif (isAuth) {\r\n\t\treturn <Redirect to={'/profile'} />\r\n\t}\r\n\r\n\tconst getResults = (values) => {\r\n\t\tlogin(values.email, values.password, values.rememberMe);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<h1 className={classes.title}>üèÅLogin</h1>\r\n\t\t\t<h2 className={classes.subtitle}>Password / Confirm Validation</h2>\r\n\t\t\t<Form\r\n\t\t\t\tonSubmit={getResults}\r\n\t\t\t\tvalidate={values => {\r\n\t\t\t\t\tconst errors = {}\r\n\t\t\t\t\tif (!values.email) {\r\n\t\t\t\t\t\terrors.email = 'Required'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!values.password) {\r\n\t\t\t\t\t\terrors.password = 'Required'\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn errors\r\n\t\t\t\t}}\r\n\t\t\t\tdecorators={[focusOnError]}\r\n\t\t\t\tsubscription={{\r\n\t\t\t\t\tsubmitting: true\r\n\t\t\t\t}}\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\temail: '',\r\n\t\t\t\t\tpassword: '',\r\n\t\t\t\t\trememberMe: false,\r\n\t\t\t\t}}\r\n\t\t\t\trender={({ handleSubmit, form, submitting, pristine, values }) => (\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t{/* <FormStateToRedux form='loginForm' /> */}\r\n\t\t\t\t\t\t<Field name='email'>\r\n\t\t\t\t\t\t\t{/* {fieldState => (\r\n\t\t\t\t\t\t\t\t<pre>{JSON.stringify(fieldState)}</pre>)} */}\r\n\t\t\t\t\t\t\t{({ input, meta }) => (\r\n\t\t\t\t\t\t\t\t<div className={`${classes.fieldArea} ${meta.active ? classes.active : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t\t\t\t\t<input {...input} type='email' placeholder='Email' />\r\n\t\t\t\t\t\t\t\t\t{meta.error && meta.touched && <span>{meta.error}</span>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Field name='password'>\r\n\t\t\t\t\t\t\t{({ input, meta }) => (\r\n\t\t\t\t\t\t\t\t<div className={`${classes.fieldArea} ${meta.active ? classes.active : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t\t\t\t<input {...input} type='password' placeholder='Password' />\r\n\t\t\t\t\t\t\t\t\t{meta.error && meta.touched && <span>{meta.error}</span>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Field name='rememberMe'>\r\n\t\t\t\t\t\t\t{({ input, meta }) => (\r\n\t\t\t\t\t\t\t\t<div className={`${classes.fieldArea} ${meta.active ? classes.active : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<label>Remember me</label>\r\n\t\t\t\t\t\t\t\t\t<input {...input} type='checkbox' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<div className={classes.buttons}>\r\n\t\t\t\t\t\t\t<button type='submit' disabled={submitting}>\r\n\t\t\t\t\t\t\t\tSubmit\r\n            \t</button>\r\n\t\t\t\t\t\t\t<button type='button' onClick={form.reset} disabled={submitting || pristine}>\r\n\t\t\t\t\t\t\t\tReset\r\n            \t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.authErrorField}>\r\n\t\t\t\t\t\t\t{authError}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth,\r\n\tauthError: state.auth.authError\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2hxTx\",\"title\":\"Login_title__TAvTr\",\"subtitle\":\"Login_subtitle__1JAQ_\",\"fieldArea\":\"Login_fieldArea__1uI7L\",\"buttons\":\"Login_buttons__2PWYT\",\"authErrorField\":\"Login_authErrorField__15neK\",\"errorField\":\"Login_errorField__3Yo4P\"};"],"sourceRoot":""}