{"version":3,"sources":["components/Login/Login.jsx","components/Login/Login.module.css"],"names":["connect","state","isAuth","auth","authError","captchaUrl","login","focusOnError","createDecorator","to","className","classes","container","title","subtitle","onSubmit","values","email","password","rememberMe","captcha","validate","errors","decorators","subscription","submitting","initialValues","render","handleSubmit","form","pristine","name","input","meta","fieldArea","active","type","placeholder","error","touched","captcha__img","src","buttons","disabled","onClick","reset","authErrorField","module","exports"],"mappings":"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","file":"static/js/6.cd358725.chunk.js","sourcesContent":["import { Form, Field, FormSpy } from 'react-final-form';\nimport classes from './Login.module.css';\nimport createDecorator from 'final-form-focus';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\n// import FormStateToRedux from '../common/FormStateToRedux';  // if I will to use Redux State\n// import FormStateFromRedux from '../common/FormStateFromRedux';  // if I will to use Redux State\n\nconst Login = ({ isAuth, login, authError, captchaUrl }) => {\n\n\t// const loginFormState = ({ form }) => (\n\t// \t<FormSpy onChange={state => console.log(form, state)} />\n\t// );\n\n\tconst focusOnError = createDecorator()\n\n\tif (isAuth) {\n\t\treturn <Redirect to={'/profile'} />\n\t}\n\n\tconst getResults = (values) => {\n\t\tlogin(values.email, values.password, values.rememberMe, values.captcha);\n\t}\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<h1 className={classes.title}>üèÅLogin</h1>\n\t\t\t<h2 className={classes.subtitle}>Password / Confirm Validation</h2>\n\t\t\t<Form\n\t\t\t\tonSubmit={getResults}\n\t\t\t\tvalidate={values => {\n\t\t\t\t\tconst errors = {}\n\t\t\t\t\tif (!values.email) {\n\t\t\t\t\t\terrors.email = 'Required'\n\t\t\t\t\t}\n\t\t\t\t\tif (!values.password) {\n\t\t\t\t\t\terrors.password = 'Required'\n\t\t\t\t\t}\n\t\t\t\t\treturn errors\n\t\t\t\t}}\n\t\t\t\tdecorators={[focusOnError]}\n\t\t\t\tsubscription={{\n\t\t\t\t\tsubmitting: true\n\t\t\t\t}}\n\t\t\t\tinitialValues={{\n\t\t\t\t\temail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\trememberMe: false,\n\t\t\t\t\tcaptcha: ''\n\t\t\t\t}}\n\t\t\t\trender={({ handleSubmit, form, submitting, pristine, values }) => (\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t{/* <FormStateToRedux form='loginForm' /> */}\n\t\t\t\t\t\t<Field name='email'>\n\t\t\t\t\t\t\t{/* {fieldState => (\n\t\t\t\t\t\t\t\t<pre>{JSON.stringify(fieldState)}</pre>)} */}\n\t\t\t\t\t\t\t{({ input, meta }) => (\n\t\t\t\t\t\t\t\t<div className={`${classes.fieldArea} ${meta.active ? classes.active : ''}`}>\n\t\t\t\t\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t\t\t\t\t<input {...input} type='email' placeholder='Email' />\n\t\t\t\t\t\t\t\t\t{meta.error && meta.touched && <span>{meta.error}</span>}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Field name='password'>\n\t\t\t\t\t\t\t{({ input, meta }) => (\n\t\t\t\t\t\t\t\t<div className={`${classes.fieldArea} ${meta.active ? classes.active : ''}`}>\n\t\t\t\t\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t\t\t\t\t<input {...input} type='password' placeholder='Password' />\n\t\t\t\t\t\t\t\t\t{meta.error && meta.touched && <span>{meta.error}</span>}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Field name='rememberMe'>\n\t\t\t\t\t\t\t{({ input, meta }) => (\n\t\t\t\t\t\t\t\t<div className={`${classes.fieldArea} ${meta.active ? classes.active : ''}`}>\n\t\t\t\t\t\t\t\t\t<label>Remember me</label>\n\t\t\t\t\t\t\t\t\t<input {...input} type='checkbox' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t{ captchaUrl && <img className={classes.captcha__img} src={captchaUrl} />}\n\t\t\t\t\t\t{ captchaUrl &&\n\t\t\t\t\t\t\t<Field name='captcha'>\n\t\t\t\t\t\t\t\t{({ input, meta }) => (\n\t\t\t\t\t\t\t\t\t<div className={`${classes.fieldArea} ${meta.active ? classes.active : ''}`}>\n\t\t\t\t\t\t\t\t\t\t<label>Captcha</label>\n\t\t\t\t\t\t\t\t\t\t<input {...input} type='text' placeholder='Symbols from image' />\n\t\t\t\t\t\t\t\t\t\t{meta.error && meta.touched && <span>{meta.error}</span>}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className={classes.buttons}>\n\t\t\t\t\t\t\t<button type='submit' disabled={submitting}>\n\t\t\t\t\t\t\t\tSubmit\n            \t</button>\n\t\t\t\t\t\t\t<button type='button' onClick={form.reset} disabled={submitting || pristine}>\n\t\t\t\t\t\t\t\tReset\n            \t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.authErrorField}>\n\t\t\t\t\t\t\t{authError}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state) => ({\n\tisAuth: state.auth.isAuth,\n\tauthError: state.auth.authError,\n\tcaptchaUrl: state.auth.captchaUrl\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2hxTx\",\"title\":\"Login_title__TAvTr\",\"subtitle\":\"Login_subtitle__1JAQ_\",\"fieldArea\":\"Login_fieldArea__1uI7L\",\"buttons\":\"Login_buttons__2PWYT\",\"authErrorField\":\"Login_authErrorField__15neK\",\"errorField\":\"Login_errorField__3Yo4P\",\"captcha__img\":\"Login_captcha__img__1uYQ-\"};"],"sourceRoot":""}